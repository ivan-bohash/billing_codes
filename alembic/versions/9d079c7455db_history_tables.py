"""history tables

Revision ID: 9d079c7455db
Revises: 2d4b6d5d3901
Create Date: 2025-05-02 13:46:51.598706

"""
from typing import Sequence, Union

import sqlalchemy_utils
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '9d079c7455db'
down_revision: Union[str, None] = '2d4b6d5d3901'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('history_billable',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('created_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=False),
                    sa.Column('updated_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=False),
                    sa.Column('icd_code', sa.String(), nullable=False),
                    sa.Column('code_history', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    with op.batch_alter_table('history_billable', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_history_billable_icd_code'), ['icd_code'], unique=False)

    op.create_table('history_non_billable',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('created_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=False),
                    sa.Column('updated_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=False),
                    sa.Column('icd_code', sa.String(), nullable=False),
                    sa.Column('code_history', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    with op.batch_alter_table('history_non_billable', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_history_non_billable_icd_code'), ['icd_code'], unique=False)

    op.create_table('pagination_billable',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('created_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=False),
                    sa.Column('updated_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=False),
                    sa.Column('url', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('pagination_non_billable',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('created_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=False),
                    sa.Column('updated_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=False),
                    sa.Column('url', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pagination_non_billable')
    op.drop_table('pagination_billable')
    with op.batch_alter_table('history_non_billable', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_history_non_billable_icd_code'))

    op.drop_table('history_non_billable')
    with op.batch_alter_table('history_billable', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_history_billable_icd_code'))

    op.drop_table('history_billable')
    # ### end Alembic commands ###
